{"ast":null,"code":"import { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport itemsReducer from './items_reducer.js';\nimport taskReducer from './task_reducer';\nlet reducers = combineReducers({\n  task: taskReducer,\n  form: formReducer,\n  items: itemsReducer\n});\n\nconst saveToLocalStorage = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n};\n\nconst persistedState = loadFromLocalStorage();\nlet store = createStore(reducers, persistedState, applyMiddleware(thunkMiddleware));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["D:/helper/help-app/src/redux/redux_store.js"],"names":["createStore","applyMiddleware","combineReducers","thunkMiddleware","reducer","formReducer","itemsReducer","taskReducer","reducers","task","form","items","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","subscribe","getState","window"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACC,IAAIC,QAAQ,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,IAAI,EAACF,WADuB;AAE5BG,EAAAA,IAAI,EAACL,WAFuB;AAG5BM,EAAAA,KAAK,EAACL;AAHsB,CAAD,CAA9B;;AAOA,MAAMM,kBAAkB,GAAIC,KAAD,IAAW;AACpC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAMK,CAAN,EAAS;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAPD;;AAQA,MAAMG,oBAAoB,GAAG,MAAM;AACjC,MAAI;AACF,UAAMR,eAAe,GAAIG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAzB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACD,GAJD,CAIE,OAAMK,CAAN,EAAS;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOK,SAAP;AACD;AACA,CATH;;AAYE,MAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AACA,IAAIK,KAAK,GAAG3B,WAAW,CAACQ,QAAD,EAAUkB,cAAV,EAA0BzB,eAAe,CAACE,eAAD,CAAzC,CAAvB;AACAwB,KAAK,CAACC,SAAN,CAAgB,MAAKhB,kBAAkB,CAACe,KAAK,CAACE,QAAN,EAAD,CAAvC;AACCC,MAAM,CAACH,KAAP,GAAeA,KAAf;AAEH,eAAeA,KAAf","sourcesContent":["import {createStore} from 'redux';\r\nimport {applyMiddleware} from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport itemsReducer from './items_reducer.js';\r\nimport taskReducer from './task_reducer'\r\n let reducers = combineReducers({\r\n    task:taskReducer,\r\n    form:formReducer,\r\n    items:itemsReducer\r\n });\r\n\r\n\r\n const saveToLocalStorage = (state) => {\r\n   try {\r\n     const serializedState = JSON.stringify(state)\r\n     localStorage.setItem('state', serializedState)\r\n   } catch(e) {\r\n     console.log(e);\r\n   }\r\n }\r\n const loadFromLocalStorage = () => {\r\n   try {\r\n     const serializedState =  localStorage.getItem('state')\r\n     if (serializedState === null) return undefined\r\n     return JSON.parse(serializedState)\r\n   } catch(e) {\r\n     console.log(e);\r\n     return undefined;\r\n   }\r\n   }\r\n  \r\n\r\n   const persistedState = loadFromLocalStorage();\r\n   let store = createStore(reducers,persistedState, applyMiddleware(thunkMiddleware));\r\n   store.subscribe(()=> saveToLocalStorage(store.getState()))\r\n    window.store = store;\r\n\r\n export default store;"]},"metadata":{},"sourceType":"module"}