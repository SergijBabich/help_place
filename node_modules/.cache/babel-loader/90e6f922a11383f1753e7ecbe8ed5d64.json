{"ast":null,"code":"import { putTask } from '../api/api';\nconst POST_USER_TASK = \"POST_USER_TASK\";\nconst POST_INA_STASH = 'POST_INA_STASH';\nlet initialState = {\n  newTask: [],\n  myTask: []\n};\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_USER_TASK:\n      let task = {\n        name: action.name,\n        descValue: action.desctiption,\n        checkbo: action.checkPay,\n        sity: action.sity,\n        phone: action.phone,\n        id: action._id\n      };\n      return { ...state,\n        newTask: [...state.newTask, task]\n      };\n\n    case POST_INA_STASH:\n      let gotTask = {\n        _id: action.data._id,\n        name: action.data.name,\n        surname: action.data.surname,\n        nameExecutor: action.data.nameExecutor,\n        phoneClient: action.data.phoneClient,\n        phoneExecutor: action.data.phoneExecutor,\n        checkPay: action.data.checkPay,\n        sity: action.data.sity,\n        desctiption: action.data.desctiption,\n        checkwillingness: action.data.checkwillingness,\n        commentExecutor: action.data.commentExecutor,\n        executionTime: action.data.executionTime,\n        surnameExecutor: action.data.surnameExecutor\n      };\n      return { ...state,\n        myTask: [...state.myTask, gotTask]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setUserTask = (name, desctiption, checkPay, sity, phone, _id) => {\n  return {\n    type: POST_USER_TASK,\n    name,\n    desctiption,\n    checkPay,\n    sity,\n    phone,\n    _id\n  };\n};\n\nconst setFullTask = data => {\n  return {\n    type: POST_USER_TASK,\n    data\n  };\n};\n\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\n  return async dispatch => {\n    let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone);\n    console.log(data);\n    dispatch(setUserTask(data.name, data.desctiption, data.checkPay, data.sity, data.phoneClient, data._id));\n  };\n};\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\n  return async dispatch => {\n    let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id);\n    console.log(data);\n    dispatch(setFullTask(data.value));\n  };\n};\nexport default taskReducer;","map":{"version":3,"sources":["D:/helper/help-app/src/redux/task_reducer.js"],"names":["putTask","POST_USER_TASK","POST_INA_STASH","initialState","newTask","myTask","taskReducer","state","action","type","task","name","descValue","desctiption","checkbo","checkPay","sity","phone","id","_id","gotTask","data","surname","nameExecutor","phoneClient","phoneExecutor","checkwillingness","commentExecutor","executionTime","surnameExecutor","setUserTask","setFullTask","createTask","dispatch","createNewTask","console","log","appointAnExecutor","putTaskForMake","value"],"mappings":"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","sourcesContent":["import {putTask} from '../api/api'\r\nconst POST_USER_TASK = \"POST_USER_TASK\"; \r\nconst POST_INA_STASH = 'POST_INA_STASH';\r\nlet initialState = {\r\n  newTask:[],\r\n  myTask:[]\r\n};\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case  POST_USER_TASK: \r\n          let task = {\r\n            name: action.name,\r\n            descValue: action.desctiption,\r\n            checkbo: action.checkPay,\r\n            sity: action.sity,\r\n            phone: action.phone,\r\n            id: action._id\r\n          } \r\n          \r\n      return {\r\n        ...state,\r\n        newTask: [...state.newTask, task],\r\n       }\r\n       case  POST_INA_STASH: \r\n          let gotTask = {\r\n            _id: action.data._id,\r\n            name: action.data.name,\r\n            surname: action.data.surname,\r\n            nameExecutor: action.data.nameExecutor,\r\n            phoneClient: action.data.phoneClient,\r\n            phoneExecutor: action.data.phoneExecutor,\r\n            checkPay: action.data.checkPay,\r\n            sity: action.data.sity,\r\n            desctiption: action.data.desctiption,\r\n            checkwillingness: action.data.checkwillingness,\r\n            commentExecutor: action.data.commentExecutor,\r\n            executionTime: action.data.executionTime,\r\n            surnameExecutor: action.data.surnameExecutor\r\n          } \r\n\r\n      return {\r\n       ...state,\r\n       myTask: [...state.myTask, gotTask],\r\n      }\r\n            default:\r\n          return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n const setUserTask = (name, desctiption, checkPay, sity, phone, _id) => {\r\n   \r\n   return {\r\n     type: POST_USER_TASK,\r\n     name,\r\n     desctiption,\r\n     checkPay,\r\n     sity,\r\n     phone,\r\n     _id\r\n   }\r\n }\r\n\r\n const setFullTask = (data) => {\r\n   \r\n  return {\r\n    type: POST_USER_TASK,\r\n    data\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone );\r\n   console.log(data); \r\n   dispatch(setUserTask(data.name, data.desctiption, data.checkPay, data.sity, data.phoneClient, data._id));\r\n  }\r\n}\r\n\r\n\r\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id );\r\n   console.log(data); \r\n   dispatch(setFullTask(data.value));\r\n  }\r\n}\r\n\r\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}