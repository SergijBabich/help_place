{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://warm-cove-14456.herokuapp.com/'\n}); //http://localhost:3012/\n//https://warm-cove-14456.herokuapp.com/\n\nexport const putTask = {\n  createNewTask(name, descValue, checkbo, sity, phone) {\n    return instance.post(`clients`, {\n      name,\n      descValue,\n      checkbo,\n      sity,\n      phone\n    }).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  },\n\n  /* change card execution data*/\n  putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) {\n    return instance.put(`profile/${id}`, {\n      nameExecutor,\n      surnameExecutor,\n      phoneExecutor,\n      executionTime,\n      commentExecutor\n    }).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  },\n\n  /* get all  my task list  */\n  getMyListTask(JSONStringListId) {\n    console.log(JSONStringListId);\n    return instance.get(`/get-my-list?id=${JSONStringListId}`, {\n      JSONStringListId\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  },\n\n  /* delene task which was coplited */\n  deleteUserTask(id) {\n    return instance.delete(`/clients/${id}`).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const getUserTask = {\n  getItems(page) {\n    console.log(page);\n    return instance.get(`/clients?pageCount=${10}&page=${page}`, {\n      page\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["D:/helper/help-app/src/api/api.js"],"names":["React","connect","axios","instance","create","withCredentials","baseURL","putTask","createNewTask","name","descValue","checkbo","sity","phone","post","then","response","console","log","data","putTaskForMake","nameExecutor","surnameExecutor","phoneExecutor","executionTime","commentExecutor","id","put","getMyListTask","JSONStringListId","get","deleteUserTask","delete","getUserTask","getItems","page"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,OAAV,QAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAjB,C,CAKA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,aAAa,CAACC,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AACjD,WAAOV,QAAQ,CAACW,IAAT,CAAe,SAAf,EAAyB;AAC5BL,MAAAA,IAD4B;AAE5BC,MAAAA,SAF4B;AAG5BC,MAAAA,OAH4B;AAI5BC,MAAAA,IAJ4B;AAK5BC,MAAAA;AAL4B,KAAzB,EAMJE,IANI,CAMCC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAOH,QAAQ,CAACG,IAAhB;AACH,KATM,CAAP;AAUH,GAZkB;;AAcnB;AACAC,EAAAA,cAAc,CAACC,YAAD,EAAeC,eAAf,EAAgCC,aAAhC,EAA+CC,aAA/C,EAA8DC,eAA9D,EAA+EC,EAA/E,EAAmF;AAC7F,WAAOvB,QAAQ,CAACwB,GAAT,CAAc,WAAUD,EAAG,EAA3B,EAA8B;AACjCL,MAAAA,YADiC;AAEjCC,MAAAA,eAFiC;AAGjCC,MAAAA,aAHiC;AAIjCC,MAAAA,aAJiC;AAKjCC,MAAAA;AALiC,KAA9B,EAMJV,IANI,CAMCC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEA,aAAOH,QAAQ,CAACG,IAAhB;AACH,KAVM,CAAP;AAWH,GA3BkB;;AA4BnB;AACAS,EAAAA,aAAa,CAACC,gBAAD,EAAmB;AAC5BZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,gBAAZ;AAEA,WAAO1B,QAAQ,CAAC2B,GAAT,CAAc,mBAAkBD,gBAAiB,EAAjD,EAAqD;AACxDA,MAAAA;AADwD,KAArD,EAEJd,IAFI,CAECC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,aAAOA,QAAQ,CAACG,IAAhB;AACH,KANM,CAAP;AAQH,GAxCkB;;AAyCnB;AACAY,EAAAA,cAAc,CAACL,EAAD,EAAK;AACf,WAAOvB,QAAQ,CAAC6B,MAAT,CAAiB,YAAWN,EAAG,EAA/B,EAAkCX,IAAlC,CAAuCC,QAAQ,IAAI;AACtD,aAAOA,QAAQ,CAACG,IAAhB;AACH,KAFM,CAAP;AAIH;;AA/CkB,CAAhB;AAqDP,OAAO,MAAMc,WAAW,GAAG;AAGvBC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACXlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ;AACA,WAAOhC,QAAQ,CAAC2B,GAAT,CAAc,sBAAqB,EAAG,SAAQK,IAAK,EAAnD,EAAsD;AACzDA,MAAAA;AADyD,KAAtD,EAEJpB,IAFI,CAECC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACG,IAAhB;AACH,KAJM,CAAP;AAKH;;AAVsB,CAApB","sourcesContent":["import React from 'react';\r\nimport {  connect} from 'react-redux';\r\nimport * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://warm-cove-14456.herokuapp.com/',\r\n\r\n});\r\n//http://localhost:3012/\r\n//https://warm-cove-14456.herokuapp.com/\r\nexport const putTask = {\r\n    createNewTask(name, descValue, checkbo, sity, phone) {\r\n        return instance.post(`clients`, {\r\n            name,\r\n            descValue,\r\n            checkbo,\r\n            sity,\r\n            phone\r\n        }).then(response => {\r\n            console.log(response.data);      \r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    /* change card execution data*/\r\n    putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) {\r\n        return instance.put(`profile/${id}`, {\r\n            nameExecutor,\r\n            surnameExecutor,\r\n            phoneExecutor,\r\n            executionTime,\r\n            commentExecutor\r\n        }).then(response => {\r\n            console.log(response.data);\r\n            \r\n            return response.data;\r\n        })\r\n    },\r\n    /* get all  my task list  */\r\n    getMyListTask(JSONStringListId) {\r\n        console.log(JSONStringListId);\r\n        \r\n        return instance.get(`/get-my-list?id=${JSONStringListId}` , {\r\n            JSONStringListId    \r\n        }).then(response => {\r\n            console.log(response);\r\n            \r\n            return response.data;\r\n        });\r\n\r\n    },\r\n    /* delene task which was coplited */\r\n    deleteUserTask(id) {\r\n        return instance.delete(`/clients/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport const getUserTask = {\r\n\r\n    \r\n    getItems(page) {\r\n        console.log(page);\r\n        return instance.get(`/clients?pageCount=${10}&page=${page}`, {\r\n            page\r\n        }).then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}