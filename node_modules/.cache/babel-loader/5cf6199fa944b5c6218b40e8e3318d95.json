{"ast":null,"code":"var _jsxFileName = \"D:\\\\helper\\\\help-app\\\\src\\\\components\\\\Items\\\\paginator.js\";\nimport React, { useState } from 'react';\nimport t from '../main/main.module.css/main.module.css';\nimport us from './paginator.module.css';\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow';\nimport TaskList from '../main/taskList';\n\nconst Paginator = props => {\n  console.log(props);\n  const [isActive, setActive] = useState(false);\n  let pagesCount = Math.ceil(props.totalUsersCount / props.page);\n  let pages = [];\n  let portionSize = 10;\n\n  for (let i = 0; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rigthPortionNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.users.map(u => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TaskList, {\n    taskList: u,\n    getItems: props.getItems,\n    appointAnExecutor: props.appointAnExecutor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: us.paginator_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: us.paginator_button_rigth,\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), pages.filter(p => p >= leftPortionNumber && p <= rigthPortionNumber).map(el => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: props.pageCount === el && us.selected__page,\n      onClick: () => {\n        props.getItems(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }\n    }, el);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    className: us.paginator_button,\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" \")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["D:/helper/help-app/src/components/Items/paginator.js"],"names":["React","useState","t","us","TakeTaskModalWindowRedux","TaskList","Paginator","props","console","log","isActive","setActive","pagesCount","Math","ceil","totalUsersCount","page","pages","portionSize","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rigthPortionNumber","users","map","u","getItems","appointAnExecutor","paginator_container","paginator_button_rigth","filter","p","el","pageCount","selected__page","paginator_button"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,yCAAd;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAOC,wBAAP,MAAqC,mCAArC;AACA,OAAOC,QAAP,MAAsB,kBAAtB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAY;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEI,QAAM,CAACG,QAAD,EAAWC,SAAX,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIW,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,KAAK,CAACQ,eAAN,GAAwBR,KAAK,CAACS,IAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,UAArB,EAAiCO,CAAC,EAAlC,EAAsC;AAClCF,IAAAA,KAAK,CAACG,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGR,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACM,WAArB,CAAnB;AACA,MAAI,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIuB,iBAAiB,GAAG,CAACF,aAAa,GAAE,CAAhB,IAAqBJ,WAArB,GAAkC,CAA1D;AACA,MAAIO,kBAAkB,GAAGH,aAAa,GAAIJ,WAA1C;AAIC,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCX,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAChB;AAAK,IAAA,KAAK,EAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAW,IAAA,QAAQ,EAAIA,CAAvB;AAA2B,IAAA,QAAQ,EAAErB,KAAK,CAACsB,QAA3C;AAAqD,IAAA,iBAAiB,EAAEtB,KAAK,CAACuB,iBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADD,CADD,eAMF;AAAK,IAAA,SAAS,EAAE3B,EAAE,CAAC4B,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,aAAa,GAAG,CAAhB,iBACC;AAAQ,IAAA,SAAS,EAAEnB,EAAE,CAAC6B,sBAAtB;AAA+C,IAAA,OAAO,EAAG,MAAM;AAAET,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAmC,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGGL,KAAK,CAACgB,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAEV,iBAAH,IAAwBU,CAAC,IAAGT,kBAA9C,EAAkEE,GAAlE,CAAsEQ,EAAE,IAAG;AACxE,wBAAS;AAAM,MAAA,SAAS,EAAE5B,KAAK,CAAC6B,SAAN,KAAoBD,EAApB,IAA0BhC,EAAE,CAACkC,cAA9C;AACT,MAAA,OAAO,EAAI,MAAM;AAAC9B,QAAAA,KAAK,CAACsB,QAAN,CAAeM,EAAf;AAAmB,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC+BA,EAD/B,CAAT;AAEH,GAHA,CAHH,EAOGd,YAAY,GAAEC,aAAd,iBACH;AAAS,IAAA,SAAS,EAAEnB,EAAE,CAACmC,gBAAvB;AAA2C,IAAA,OAAO,EAAI,MAAK;AAAEf,MAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AAAoC,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARA,CANE,CADH;AAmBF,CApCH;;AAsCA,eAAehB,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport t from '../main/main.module.css/main.module.css';\r\nimport us from './paginator.module.css'\r\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow'\r\nimport TaskList  from '../main/taskList';\r\nconst Paginator = (props) =>  {\r\nconsole.log(props);\r\n\r\n    const [isActive, setActive] = useState(false);\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.page);\r\n    let pages = [];\r\n    let portionSize = 10;\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber -1) * portionSize +1;\r\n    let rigthPortionNumber = portionNumber  * portionSize;\r\n \r\n    \r\n        \r\n     return (\r\n        <div>\r\n        {props.users.map(u =>\r\n          <div class=''>\r\n              <TaskList  taskList = {u}  getItems={props.getItems} appointAnExecutor={props.appointAnExecutor}/>\r\n         </div>\r\n      )}\r\n      <div className={us.paginator_container}>\r\n        {portionNumber > 1 &&\r\n          <button className={us.paginator_button_rigth}  onClick={ () => { setPortionNumber(portionNumber-1) }}></button>}\r\n        {pages.filter(p => p>=leftPortionNumber && p<= rigthPortionNumber).map(el =>{\r\n            return   <span className={props.pageCount === el && us.selected__page}\r\n            onClick = {() => {props.getItems(el)}}>{el}</span>\r\n        })}\r\n        {portionCount> portionNumber &&\r\n      <button  className={us.paginator_button}   onClick = {()=> { setPortionNumber(portionNumber+ 1) }}> </button> }\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}