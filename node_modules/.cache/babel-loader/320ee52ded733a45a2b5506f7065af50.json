{"ast":null,"code":"import { putTask } from '../api/api';\nconst POST_USER_TASK = \"POST_USER_TASK\";\nconst POST_INA_STASH = 'POST_INA_STASH';\nlet initialState = {\n  newTask: [],\n  myTask: []\n};\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_INA_STASH:\n      console.log(action);\n      let gotTask = {\n        _id: action.data._id,\n        name: action.data.name,\n        surname: action.data.surname,\n        nameExecutor: action.data.nameExecutor,\n        phoneClient: action.data.phoneClient,\n        phoneExecutor: action.data.phoneExecutor,\n        checkPay: action.data.checkPay,\n        sity: action.data.sity,\n        desctiption: action.data.desctiption,\n        checkwillingness: action.data.checkwillingness,\n        commentExecutor: action.data.commentExecutor,\n        executionTime: action.data.executionTime,\n        surnameExecutor: action.data.surnameExecutor\n      };\n      return { ...state,\n        myTask: [...state.myTask, gotTask]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setFullTask = data => {\n  console.log(data);\n  return {\n    type: POST_USER_TASK,\n    data\n  };\n};\n\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\n  return async dispatch => {\n    let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone);\n    console.log(data);\n  };\n};\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\n  return async dispatch => {\n    let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id);\n    console.log(data);\n    dispatch(setFullTask(data.value));\n  };\n};\nexport default taskReducer;","map":{"version":3,"sources":["D:/helper/help-app/src/redux/task_reducer.js"],"names":["putTask","POST_USER_TASK","POST_INA_STASH","initialState","newTask","myTask","taskReducer","state","action","type","console","log","gotTask","_id","data","name","surname","nameExecutor","phoneClient","phoneExecutor","checkPay","sity","desctiption","checkwillingness","commentExecutor","executionTime","surnameExecutor","setFullTask","createTask","descValue","checkbo","phone","dispatch","createNewTask","appointAnExecutor","id","putTaskForMake","value"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,EADS;AAEjBC,EAAAA,MAAM,EAAC;AAFU,CAAnB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEG,SAAMP,cAAN;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEG,UAAII,OAAO,GAAG;AACZC,QAAAA,GAAG,EAAEL,MAAM,CAACM,IAAP,CAAYD,GADL;AAEZE,QAAAA,IAAI,EAAEP,MAAM,CAACM,IAAP,CAAYC,IAFN;AAGZC,QAAAA,OAAO,EAAER,MAAM,CAACM,IAAP,CAAYE,OAHT;AAIZC,QAAAA,YAAY,EAAET,MAAM,CAACM,IAAP,CAAYG,YAJd;AAKZC,QAAAA,WAAW,EAAEV,MAAM,CAACM,IAAP,CAAYI,WALb;AAMZC,QAAAA,aAAa,EAAEX,MAAM,CAACM,IAAP,CAAYK,aANf;AAOZC,QAAAA,QAAQ,EAAEZ,MAAM,CAACM,IAAP,CAAYM,QAPV;AAQZC,QAAAA,IAAI,EAAEb,MAAM,CAACM,IAAP,CAAYO,IARN;AASZC,QAAAA,WAAW,EAAEd,MAAM,CAACM,IAAP,CAAYQ,WATb;AAUZC,QAAAA,gBAAgB,EAAEf,MAAM,CAACM,IAAP,CAAYS,gBAVlB;AAWZC,QAAAA,eAAe,EAAEhB,MAAM,CAACM,IAAP,CAAYU,eAXjB;AAYZC,QAAAA,aAAa,EAAEjB,MAAM,CAACM,IAAP,CAAYW,aAZf;AAaZC,QAAAA,eAAe,EAAElB,MAAM,CAACM,IAAP,CAAYY;AAbjB,OAAd;AAgBJ,aAAO,EACN,GAAGnB,KADG;AAENF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBO,OAAlB;AAFF,OAAP;;AAIM;AACF,aAAOL,KAAP;AA1BN;AA4BH,CA7BD;;AAmCC,MAAMoB,WAAW,GAAIb,IAAD,IAAU;AAC5BJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAED,SAAO;AACLL,IAAAA,IAAI,EAAER,cADD;AAELa,IAAAA;AAFK,GAAP;AAID,CAPA;;AAWD,OAAO,MAAMc,UAAU,GAAG,CAACb,IAAD,EAAOc,SAAP,EAAkBC,OAAlB,EAA2BT,IAA3B,EAAiCU,KAAjC,KAA2C;AACnE,SAAQ,MAAOC,QAAP,IAAoB;AAC3B,QAAIlB,IAAI,GAAG,MAAMd,OAAO,CAACiC,aAAR,CAAsBlB,IAAtB,EAA4Bc,SAA5B,EAAuCC,OAAvC,EAAgDT,IAAhD,EAAsDU,KAAtD,CAAjB;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,GAJD;AAKD,CANM;AASP,OAAO,MAAMoB,iBAAiB,GAAG,CAACjB,YAAD,EAAeS,eAAf,EAAgCP,aAAhC,EAA+CM,aAA/C,EAA8DD,eAA9D,EAA+EW,EAA/E,KAAsF;AACrH,SAAQ,MAAOH,QAAP,IAAoB;AAC3B,QAAIlB,IAAI,GAAG,MAAMd,OAAO,CAACoC,cAAR,CAAuBnB,YAAvB,EAAqCS,eAArC,EAAsDP,aAAtD,EAAqEM,aAArE,EAAoFD,eAApF,EAAqGW,EAArG,CAAjB;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAkB,IAAAA,QAAQ,CAACL,WAAW,CAACb,IAAI,CAACuB,KAAN,CAAZ,CAAR;AACA,GAJD;AAKD,CANM;AAQP,eAAe/B,WAAf","sourcesContent":["import {putTask} from '../api/api'\r\nconst POST_USER_TASK = \"POST_USER_TASK\"; \r\nconst POST_INA_STASH = 'POST_INA_STASH';\r\nlet initialState = {\r\n  newTask:[],\r\n  myTask:[]\r\n};\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n       case  POST_INA_STASH: \r\n       console.log(action);\r\n       \r\n          let gotTask = {\r\n            _id: action.data._id,\r\n            name: action.data.name,\r\n            surname: action.data.surname,\r\n            nameExecutor: action.data.nameExecutor,\r\n            phoneClient: action.data.phoneClient,\r\n            phoneExecutor: action.data.phoneExecutor,\r\n            checkPay: action.data.checkPay,\r\n            sity: action.data.sity,\r\n            desctiption: action.data.desctiption,\r\n            checkwillingness: action.data.checkwillingness,\r\n            commentExecutor: action.data.commentExecutor,\r\n            executionTime: action.data.executionTime,\r\n            surnameExecutor: action.data.surnameExecutor\r\n          } \r\n\r\n      return {\r\n       ...state,\r\n       myTask: [...state.myTask, gotTask],\r\n      }\r\n            default:\r\n          return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n \r\n\r\n const setFullTask = (data) => {\r\n   console.log(data);\r\n   \r\n  return {\r\n    type: POST_USER_TASK,\r\n    data\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone );\r\n   console.log(data); \r\n   \r\n  }\r\n}\r\n\r\n\r\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id );\r\n   console.log(data); \r\n   dispatch(setFullTask(data.value));\r\n  }\r\n}\r\n\r\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}