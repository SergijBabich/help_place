{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\helper\\\\help-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\helper\\\\help-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:\\\\helper\\\\help-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\helper\\\\help-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{putTask}from'../api/api';var POST_USER_TASK=\"POST_USER_TASK\";var POST_INA_STASH='POST_INA_STASH';var GET_MY_LIST_TASK='GET_MY_LIST_TASK';var GET_MY_LIST_ID='GET_MY_LIST_ID';var initialState={myTaskId:[],newTask:[],myTask:[],myListTask:[]};var taskReducer=function taskReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case POST_INA_STASH:var gotTask={_id:action.data._id,name:action.data.name,surname:action.data.surname,nameExecutor:action.data.nameExecutor,phoneClient:action.data.phoneClient,phoneExecutor:action.data.phoneExecutor,checkPay:action.data.checkPay,sity:action.data.sity,desctiption:action.data.desctiption,checkwillingness:action.data.checkwillingness,commentExecutor:action.data.commentExecutor,executionTime:action.data.executionTime,surnameExecutor:action.data.surnameExecutor};var isTake=true;return _objectSpread({},state,{myTask:[].concat(_toConsumableArray(state.myTask),[gotTask]),isTake:true});case GET_MY_LIST_TASK:var evenTask={_id:action.data._id,name:action.data.name,surname:action.data.surname,nameExecutor:action.data.nameExecutor,phoneClient:action.data.phoneClient,phoneExecutor:action.data.phoneExecutor,checkPay:action.data.checkPay,sity:action.data.sity,desctiption:action.data.desctiption,checkwillingness:action.data.checkwillingness,commentExecutor:action.data.commentExecutor,executionTime:action.data.executionTime,surnameExecutor:action.data.surnameExecutor};return _objectSpread({},state,{myListTask:action.data});case GET_MY_LIST_ID:var id=action._id;return _objectSpread({},state,{myTaskId:[].concat(_toConsumableArray(state.myTaskId),[id])});default:return state;}};var setFullTask=function setFullTask(data){return{type:POST_INA_STASH,data:data};};var getmyTaskList=function getmyTaskList(data){return{type:GET_MY_LIST_TASK,data:data};};var getMyListId=function getMyListId(_id){return{type:GET_MY_LIST_ID,_id:_id};};export var createTask=function createTask(name,descValue,checkbo,sity,phone){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return putTask.createNewTask(name,descValue,checkbo,sity,phone);case 2:data=_context.sent;dispatch(getMyListId(data._id));console.log(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getMyListTask=function getMyListTask(JSONStringListId){console.log(JSONStringListId);return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return putTask.getMyListTask(JSONStringListId);case 2:data=_context2.sent;dispatch(getmyTaskList(data));console.log(data);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var appointAnExecutor=function appointAnExecutor(nameExecutor,surnameExecutor,phoneExecutor,executionTime,commentExecutor,id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var data,chooseTaskExecutor;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return putTask.putTaskForMake(nameExecutor,surnameExecutor,phoneExecutor,executionTime,commentExecutor,id);case 2:data=_context3.sent;console.log(data);chooseTaskExecutor=JSON.stringify(data.value);localStorage.setItem('chooseTask',chooseTaskExecutor);console.log(chooseTaskExecutor);dispatch(setFullTask(data.value));case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var removeTaskUser=function removeTaskUser(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return putTask.deleteUserTask(id);case 2:data=_context4.sent;case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default taskReducer;","map":{"version":3,"sources":["D:/helper/help-app/src/redux/task_reducer.js"],"names":["putTask","POST_USER_TASK","POST_INA_STASH","GET_MY_LIST_TASK","GET_MY_LIST_ID","initialState","myTaskId","newTask","myTask","myListTask","taskReducer","state","action","type","gotTask","_id","data","name","surname","nameExecutor","phoneClient","phoneExecutor","checkPay","sity","desctiption","checkwillingness","commentExecutor","executionTime","surnameExecutor","isTake","evenTask","id","setFullTask","getmyTaskList","getMyListId","createTask","descValue","checkbo","phone","dispatch","createNewTask","console","log","getMyListTask","JSONStringListId","appointAnExecutor","putTaskForMake","chooseTaskExecutor","JSON","stringify","value","localStorage","setItem","removeTaskUser","deleteUserTask"],"mappings":"okBAAA,OAAQA,OAAR,KAAsB,YAAtB,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAIC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAC,EADQ,CAEjBC,OAAO,CAAC,EAFS,CAGjBC,MAAM,CAAC,EAHU,CAIjBC,UAAU,CAAC,EAJM,CAAnB,CAMA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EAEG,IAAMX,CAAAA,cAAN,CACG,GAAIY,CAAAA,OAAO,CAAG,CACZC,GAAG,CAAEH,MAAM,CAACI,IAAP,CAAYD,GADL,CAEZE,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYC,IAFN,CAGZC,OAAO,CAAEN,MAAM,CAACI,IAAP,CAAYE,OAHT,CAIZC,YAAY,CAAEP,MAAM,CAACI,IAAP,CAAYG,YAJd,CAKZC,WAAW,CAAER,MAAM,CAACI,IAAP,CAAYI,WALb,CAMZC,aAAa,CAAET,MAAM,CAACI,IAAP,CAAYK,aANf,CAOZC,QAAQ,CAAEV,MAAM,CAACI,IAAP,CAAYM,QAPV,CAQZC,IAAI,CAAEX,MAAM,CAACI,IAAP,CAAYO,IARN,CASZC,WAAW,CAAEZ,MAAM,CAACI,IAAP,CAAYQ,WATb,CAUZC,gBAAgB,CAAEb,MAAM,CAACI,IAAP,CAAYS,gBAVlB,CAWZC,eAAe,CAAEd,MAAM,CAACI,IAAP,CAAYU,eAXjB,CAYZC,aAAa,CAAEf,MAAM,CAACI,IAAP,CAAYW,aAZf,CAaZC,eAAe,CAAEhB,MAAM,CAACI,IAAP,CAAYY,eAbjB,CAAd,CAeA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CAEJ,wBACIlB,KADJ,EAECH,MAAM,8BAAMG,KAAK,CAACH,MAAZ,GAAqBM,OAArB,EAFP,CAGCe,MAAM,CAAC,IAHR,GAKA,IAAK1B,CAAAA,gBAAL,CACE,GAAI2B,CAAAA,QAAQ,CAAG,CACbf,GAAG,CAAEH,MAAM,CAACI,IAAP,CAAYD,GADJ,CAEbE,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYC,IAFL,CAGbC,OAAO,CAAEN,MAAM,CAACI,IAAP,CAAYE,OAHR,CAIbC,YAAY,CAAEP,MAAM,CAACI,IAAP,CAAYG,YAJb,CAKbC,WAAW,CAAER,MAAM,CAACI,IAAP,CAAYI,WALZ,CAMbC,aAAa,CAAET,MAAM,CAACI,IAAP,CAAYK,aANd,CAObC,QAAQ,CAAEV,MAAM,CAACI,IAAP,CAAYM,QAPT,CAQbC,IAAI,CAAEX,MAAM,CAACI,IAAP,CAAYO,IARL,CASbC,WAAW,CAAEZ,MAAM,CAACI,IAAP,CAAYQ,WATZ,CAUbC,gBAAgB,CAAEb,MAAM,CAACI,IAAP,CAAYS,gBAVjB,CAWbC,eAAe,CAAEd,MAAM,CAACI,IAAP,CAAYU,eAXhB,CAYbC,aAAa,CAAEf,MAAM,CAACI,IAAP,CAAYW,aAZd,CAabC,eAAe,CAAEhB,MAAM,CAACI,IAAP,CAAYY,eAbhB,CAAf,CAeA,wBACKjB,KADL,EAEEF,UAAU,CAAGG,MAAM,CAACI,IAFtB,GAIE,IAAKZ,CAAAA,cAAL,CACA,GAAI2B,CAAAA,EAAE,CAAGnB,MAAM,CAACG,GAAhB,CACF,wBACKJ,KADL,EACaL,QAAQ,8BAAMK,KAAK,CAACL,QAAZ,GAAuByB,EAAvB,EADrB,GAGI,QACF,MAAOpB,CAAAA,KAAP,CAnDN,CAqDH,CAtDD,CA4DC,GAAMqB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAChB,IAAD,CAAU,CAC7B,MAAO,CACLH,IAAI,CAAEX,cADD,CAELc,IAAI,CAAJA,IAFK,CAAP,CAID,CALA,CAMD,GAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACjB,IAAD,CAAU,CAC9B,MAAO,CACLH,IAAI,CAAEV,gBADD,CAELa,IAAI,CAAJA,IAFK,CAAP,CAID,CALD,CAQA,GAAMkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACnB,GAAD,CAAS,CAC3B,MAAO,CACLF,IAAI,CAAET,cADD,CAELW,GAAG,CAAHA,GAFK,CAAP,CAID,CALD,CAQA,MAAO,IAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAClB,IAAD,CAAOmB,SAAP,CAAkBC,OAAlB,CAA2Bd,IAA3B,CAAiCe,KAAjC,CAA2C,CACnE,+FAAQ,iBAAOC,QAAP,iJACUvC,CAAAA,OAAO,CAACwC,aAAR,CAAsBvB,IAAtB,CAA4BmB,SAA5B,CAAuCC,OAAvC,CAAgDd,IAAhD,CAAsDe,KAAtD,CADV,QACHtB,IADG,eAEPuB,QAAQ,CAACL,WAAW,CAAClB,IAAI,CAACD,GAAN,CAAZ,CAAR,CACA0B,OAAO,CAACC,GAAR,CAAY1B,IAAZ,EAHO,sDAAR,+DAMD,CAPM,CASP,MAAO,IAAM2B,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,gBAAD,CAAsB,CACjDH,OAAO,CAACC,GAAR,CAAYE,gBAAZ,EACA,gGAAQ,kBAAOL,QAAP,sJAEUvC,CAAAA,OAAO,CAAC2C,aAAR,CAAsBC,gBAAtB,CAFV,QAEH5B,IAFG,gBAGNuB,QAAQ,CAACN,aAAa,CAACjB,IAAD,CAAd,CAAR,CACDyB,OAAO,CAACC,GAAR,CAAY1B,IAAZ,EAJO,wDAAR,iEAOD,CATM,CAUP,MAAO,IAAM6B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAC1B,YAAD,CAAeS,eAAf,CAAgCP,aAAhC,CAA+CM,aAA/C,CAA8DD,eAA9D,CAA+EK,EAA/E,CAAsF,CACrH,gGAAQ,kBAAOQ,QAAP,yKACUvC,CAAAA,OAAO,CAAC8C,cAAR,CAAuB3B,YAAvB,CAAqCS,eAArC,CAAsDP,aAAtD,CAAqEM,aAArE,CAAoFD,eAApF,CAAqGK,EAArG,CADV,QACHf,IADG,gBAEPyB,OAAO,CAACC,GAAR,CAAY1B,IAAZ,EACM+B,kBAHC,CAGoBC,IAAI,CAACC,SAAL,CAAejC,IAAI,CAACkC,KAApB,CAHpB,CAIPC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmCL,kBAAnC,EACAN,OAAO,CAACC,GAAR,CAAYK,kBAAZ,EACAR,QAAQ,CAACP,WAAW,CAAChB,IAAI,CAACkC,KAAN,CAAZ,CAAR,CANO,wDAAR,iEAUD,CAXM,CAYP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACtB,EAAD,CAAQ,CACpC,gGAAS,kBAAOQ,QAAP,sJACWvC,CAAAA,OAAO,CAACsD,cAAR,CAAuBvB,EAAvB,CADX,QACFf,IADE,wEAAT,iEAGD,CAJM,CAQP,cAAeN,CAAAA,WAAf","sourcesContent":["import {putTask} from '../api/api';\r\nconst POST_USER_TASK = \"POST_USER_TASK\"; \r\nconst POST_INA_STASH = 'POST_INA_STASH';\r\nconst GET_MY_LIST_TASK = 'GET_MY_LIST_TASK';\r\nconst GET_MY_LIST_ID = 'GET_MY_LIST_ID';\r\nlet initialState = {\r\n  myTaskId:[],\r\n  newTask:[],\r\n  myTask:[],\r\n  myListTask:[]\r\n};\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n       case  POST_INA_STASH:        \r\n          let gotTask = {\r\n            _id: action.data._id,\r\n            name: action.data.name,\r\n            surname: action.data.surname,\r\n            nameExecutor: action.data.nameExecutor,\r\n            phoneClient: action.data.phoneClient,\r\n            phoneExecutor: action.data.phoneExecutor,\r\n            checkPay: action.data.checkPay,\r\n            sity: action.data.sity,\r\n            desctiption: action.data.desctiption,\r\n            checkwillingness: action.data.checkwillingness,\r\n            commentExecutor: action.data.commentExecutor,\r\n            executionTime: action.data.executionTime,\r\n            surnameExecutor: action.data.surnameExecutor\r\n          } \r\n          let isTake = true;\r\n\r\n      return {\r\n       ...state,\r\n       myTask: [...state.myTask,  gotTask],\r\n       isTake:true\r\n      }\r\n      case GET_MY_LIST_TASK:\r\n        let evenTask = {\r\n          _id: action.data._id,\r\n          name: action.data.name,\r\n          surname: action.data.surname,\r\n          nameExecutor: action.data.nameExecutor,\r\n          phoneClient: action.data.phoneClient,\r\n          phoneExecutor: action.data.phoneExecutor,\r\n          checkPay: action.data.checkPay,\r\n          sity: action.data.sity,\r\n          desctiption: action.data.desctiption,\r\n          checkwillingness: action.data.checkwillingness,\r\n          commentExecutor: action.data.commentExecutor,\r\n          executionTime: action.data.executionTime,\r\n          surnameExecutor: action.data.surnameExecutor\r\n        } \r\n        return {\r\n          ...state,\r\n          myListTask:  action.data\r\n        }\r\n          case GET_MY_LIST_ID:\r\n          let id = action._id;\r\n        return {\r\n          ...state,  myTaskId: [...state.myTaskId,  id],\r\n        }\r\n            default:\r\n          return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n \r\n\r\n const setFullTask = (data) => {  \r\n  return {\r\n    type: POST_INA_STASH,\r\n    data\r\n  }\r\n}\r\nconst getmyTaskList = (data) => {  \r\n  return {\r\n    type: GET_MY_LIST_TASK,\r\n    data\r\n  }\r\n}\r\n\r\n\r\nconst getMyListId = (_id) => {\r\n  return {\r\n    type: GET_MY_LIST_ID,\r\n    _id\r\n  }\r\n}\r\n\r\n\r\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone );\r\n   dispatch(getMyListId(data._id));\r\n   console.log(data); \r\n   \r\n  }\r\n}\r\n\r\nexport const getMyListTask = (JSONStringListId) => {\r\n  console.log(JSONStringListId)\r\n  return  async (dispatch) => {\r\n\r\n   let data = await putTask.getMyListTask(JSONStringListId);\r\n    dispatch(getmyTaskList(data))\r\n   console.log(data);  \r\n\r\n  }\r\n}\r\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id );\r\n   console.log(data); \r\n   const chooseTaskExecutor = JSON.stringify(data.value);\r\n   localStorage.setItem('chooseTask', chooseTaskExecutor);\r\n   console.log(chooseTaskExecutor);\r\n   dispatch(setFullTask(data.value));\r\n   \r\n\r\n  }\r\n}\r\nexport const removeTaskUser = (id) => {\r\n  return   async (dispatch) => {\r\n     let data = await putTask.deleteUserTask(id);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}