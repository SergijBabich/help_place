{"ast":null,"code":"import { putTask } from '../api/api';\nconst POST_USER_TASK = \"POST_USER_TASK\";\nconst POST_INA_STASH = 'POST_INA_STASH';\nlet initialState = {\n  newTask: [],\n  myTask: []\n};\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_INA_STASH:\n      let gotTask = {\n        _id: action.data._id,\n        name: action.data.name,\n        surname: action.data.surname,\n        nameExecutor: action.data.nameExecutor,\n        phoneClient: action.data.phoneClient,\n        phoneExecutor: action.data.phoneExecutor,\n        checkPay: action.data.checkPay,\n        sity: action.data.sity,\n        desctiption: action.data.desctiption,\n        checkwillingness: action.data.checkwillingness,\n        commentExecutor: action.data.commentExecutor,\n        executionTime: action.data.executionTime,\n        surnameExecutor: action.data.surnameExecutor\n      };\n      let isTake = true;\n      return { ...state,\n        myTask: [...state.myTask, gotTask],\n        isTake: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setFullTask = data => {\n  return {\n    type: POST_INA_STASH,\n    data\n  };\n};\n\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\n  return async dispatch => {\n    let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone);\n    console.log(data);\n  };\n};\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\n  return async dispatch => {\n    let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id);\n    console.log(data);\n    const chooseTaskExecutor = JSON.stringify(data.value);\n    localStorage.setItem('chooseTask', chooseTaskExecutor);\n    console.log(chooseTaskExecutor);\n    dispatch(setFullTask(chooseTaskExecutor));\n  };\n};\nexport default taskReducer;","map":{"version":3,"sources":["D:/helper/help-app/src/redux/task_reducer.js"],"names":["putTask","POST_USER_TASK","POST_INA_STASH","initialState","newTask","myTask","taskReducer","state","action","type","gotTask","_id","data","name","surname","nameExecutor","phoneClient","phoneExecutor","checkPay","sity","desctiption","checkwillingness","commentExecutor","executionTime","surnameExecutor","isTake","setFullTask","createTask","descValue","checkbo","phone","dispatch","createNewTask","console","log","appointAnExecutor","id","putTaskForMake","chooseTaskExecutor","JSON","stringify","value","localStorage","setItem"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,EADS;AAEjBC,EAAAA,MAAM,EAAC;AAFU,CAAnB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEG,SAAMP,cAAN;AACG,UAAIQ,OAAO,GAAG;AACZC,QAAAA,GAAG,EAAEH,MAAM,CAACI,IAAP,CAAYD,GADL;AAEZE,QAAAA,IAAI,EAAEL,MAAM,CAACI,IAAP,CAAYC,IAFN;AAGZC,QAAAA,OAAO,EAAEN,MAAM,CAACI,IAAP,CAAYE,OAHT;AAIZC,QAAAA,YAAY,EAAEP,MAAM,CAACI,IAAP,CAAYG,YAJd;AAKZC,QAAAA,WAAW,EAAER,MAAM,CAACI,IAAP,CAAYI,WALb;AAMZC,QAAAA,aAAa,EAAET,MAAM,CAACI,IAAP,CAAYK,aANf;AAOZC,QAAAA,QAAQ,EAAEV,MAAM,CAACI,IAAP,CAAYM,QAPV;AAQZC,QAAAA,IAAI,EAAEX,MAAM,CAACI,IAAP,CAAYO,IARN;AASZC,QAAAA,WAAW,EAAEZ,MAAM,CAACI,IAAP,CAAYQ,WATb;AAUZC,QAAAA,gBAAgB,EAAEb,MAAM,CAACI,IAAP,CAAYS,gBAVlB;AAWZC,QAAAA,eAAe,EAAEd,MAAM,CAACI,IAAP,CAAYU,eAXjB;AAYZC,QAAAA,aAAa,EAAEf,MAAM,CAACI,IAAP,CAAYW,aAZf;AAaZC,QAAAA,eAAe,EAAEhB,MAAM,CAACI,IAAP,CAAYY;AAbjB,OAAd;AAeA,UAAIC,MAAM,GAAG,IAAb;AAEJ,aAAO,EACN,GAAGlB,KADG;AAENF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAmBK,OAAnB,CAFF;AAGNe,QAAAA,MAAM,EAAC;AAHD,OAAP;;AAKM;AACF,aAAOlB,KAAP;AA1BN;AA4BH,CA7BD;;AAmCC,MAAMmB,WAAW,GAAId,IAAD,IAAU;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAEP,cADD;AAELU,IAAAA;AAFK,GAAP;AAID,CALA;;AASD,OAAO,MAAMe,UAAU,GAAG,CAACd,IAAD,EAAOe,SAAP,EAAkBC,OAAlB,EAA2BV,IAA3B,EAAiCW,KAAjC,KAA2C;AACnE,SAAQ,MAAOC,QAAP,IAAoB;AAC3B,QAAInB,IAAI,GAAG,MAAMZ,OAAO,CAACgC,aAAR,CAAsBnB,IAAtB,EAA4Be,SAA5B,EAAuCC,OAAvC,EAAgDV,IAAhD,EAAsDW,KAAtD,CAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AAEA,GAJD;AAKD,CANM;AASP,OAAO,MAAMuB,iBAAiB,GAAG,CAACpB,YAAD,EAAeS,eAAf,EAAgCP,aAAhC,EAA+CM,aAA/C,EAA8DD,eAA9D,EAA+Ec,EAA/E,KAAsF;AACrH,SAAQ,MAAOL,QAAP,IAAoB;AAC3B,QAAInB,IAAI,GAAG,MAAMZ,OAAO,CAACqC,cAAR,CAAuBtB,YAAvB,EAAqCS,eAArC,EAAsDP,aAAtD,EAAqEM,aAArE,EAAoFD,eAApF,EAAqGc,EAArG,CAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AACA,UAAM0B,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAe5B,IAAI,CAAC6B,KAApB,CAA3B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCL,kBAAnC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,kBAAZ;AACAP,IAAAA,QAAQ,CAACL,WAAW,CAACY,kBAAD,CAAZ,CAAR;AAGA,GATD;AAUD,CAXM;AAaP,eAAehC,WAAf","sourcesContent":["import {putTask} from '../api/api'\r\nconst POST_USER_TASK = \"POST_USER_TASK\"; \r\nconst POST_INA_STASH = 'POST_INA_STASH';\r\nlet initialState = {\r\n  newTask:[],\r\n  myTask:[]\r\n};\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n       case  POST_INA_STASH:        \r\n          let gotTask = {\r\n            _id: action.data._id,\r\n            name: action.data.name,\r\n            surname: action.data.surname,\r\n            nameExecutor: action.data.nameExecutor,\r\n            phoneClient: action.data.phoneClient,\r\n            phoneExecutor: action.data.phoneExecutor,\r\n            checkPay: action.data.checkPay,\r\n            sity: action.data.sity,\r\n            desctiption: action.data.desctiption,\r\n            checkwillingness: action.data.checkwillingness,\r\n            commentExecutor: action.data.commentExecutor,\r\n            executionTime: action.data.executionTime,\r\n            surnameExecutor: action.data.surnameExecutor\r\n          } \r\n          let isTake = true;\r\n\r\n      return {\r\n       ...state,\r\n       myTask: [...state.myTask,  gotTask],\r\n       isTake:true\r\n      }\r\n            default:\r\n          return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n \r\n\r\n const setFullTask = (data) => {  \r\n  return {\r\n    type: POST_INA_STASH,\r\n    data\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const createTask = (name, descValue, checkbo, sity, phone) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.createNewTask(name, descValue, checkbo, sity, phone );\r\n   console.log(data); \r\n   \r\n  }\r\n}\r\n\r\n\r\nexport const appointAnExecutor = (nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) => {\r\n  return  async (dispatch) => {\r\n   let data = await putTask.putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id );\r\n   console.log(data); \r\n   const chooseTaskExecutor = JSON.stringify(data.value);\r\n   localStorage.setItem('chooseTask', chooseTaskExecutor);\r\n   console.log(chooseTaskExecutor);\r\n   dispatch(setFullTask(chooseTaskExecutor));\r\n   \r\n\r\n  }\r\n}\r\n\r\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}