{"ast":null,"code":"var _jsxFileName = \"D:\\\\helper\\\\help-app\\\\src\\\\components\\\\Items\\\\paginator.js\";\nimport React, { useState } from 'react';\nimport t from '../main/main.module.css/main.module.css';\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow';\nimport TaskList from '../main/taskList';\n\nconst Paginator = props => {\n  console.log(props);\n  const [isActive, setActive] = useState(false);\n  let pagesCount = Math.ceil(props.totalUsersCount / props.page);\n  let pages = [];\n  let portionSize = 10;\n\n  for (let i = 0; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rigthPortionNumber = portionNumber * portionSize;\n  console.log(props.page);\n  console.log(props.users);\n  const [isTake, setTake] = useState(false);\n\n  const takeTaskToDo = () => {\n    setTake(true);\n  };\n\n  const collectExecutorInformation = value => {\n    console.log(value);\n    props.appointAnExecutor(value.nameExecutor, value.surnameExecutor, value.phoneExecutor, value.executionTime, value.commentExecutor, props.users._id);\n    console.log(value.nameExecutor, value.surnameExecutor, value.phoneExecutor, value.executionTime, value.commentExecutor, props.users._id);\n    setTake(false);\n  };\n\n  const canceltakeTaskToDo = () => {\n    setTake(false);\n  };\n\n  const openCteatorTask = () => {\n    setActive(true);\n  };\n\n  const getTaskFromUser = value => {\n    console.log(value);\n    props.createTask(value.name, value.descValue, value.checkbo, value.sity, value.phone);\n    setActive(false);\n  };\n\n  const closeTaskWingow = () => {\n    setActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.users.map(u => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TaskList, {\n    taskList: u,\n    appointAnExecutor: props.appointAnExecutor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"\",\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), pages.filter(p => p >= leftPortionNumber && p <= rigthPortionNumber).map(el => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: props.pageCount === el,\n      onClick: () => {\n        props.getItems(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }\n    }, el);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"\",\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \" \")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["D:/helper/help-app/src/components/Items/paginator.js"],"names":["React","useState","t","TakeTaskModalWindowRedux","TaskList","Paginator","props","console","log","isActive","setActive","pagesCount","Math","ceil","totalUsersCount","page","pages","portionSize","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rigthPortionNumber","users","isTake","setTake","takeTaskToDo","collectExecutorInformation","value","appointAnExecutor","nameExecutor","surnameExecutor","phoneExecutor","executionTime","commentExecutor","_id","canceltakeTaskToDo","openCteatorTask","getTaskFromUser","createTask","name","descValue","checkbo","sity","phone","closeTaskWingow","map","u","filter","p","el","pageCount","getItems"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport t from '../main/main.module.css/main.module.css'\r\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow'\r\nimport TaskList  from '../main/taskList';\r\nconst Paginator = (props) =>  {\r\n    console.log(props);\r\n    const [isActive, setActive] = useState(false);\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.page);\r\n    let pages = [];\r\n    let portionSize = 10;\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber -1) * portionSize +1;\r\n    let rigthPortionNumber = portionNumber  * portionSize;\r\n    console.log(props.page);\r\n    console.log(props.users);\r\n    \r\n    const [isTake, setTake] = useState(false);   \r\n    const takeTaskToDo = () => {\r\n        setTake(true)\r\n    }\r\n\r\n    const collectExecutorInformation = (value) => {\r\n        console.log(value);\r\n        props.appointAnExecutor(value.nameExecutor, value.surnameExecutor, value.phoneExecutor, value.executionTime, value.commentExecutor, props.users._id )\r\n        console.log(value.nameExecutor, value.surnameExecutor, value.phoneExecutor, value.executionTime, value.commentExecutor,  props.users._id);\r\n        \r\n        setTake(false)\r\n        \r\n    }\r\n    const canceltakeTaskToDo = () => {\r\n        setTake(false)\r\n    }\r\n\r\n        \r\n\r\n    const openCteatorTask  = () => {\r\n        setActive(true)\r\n    }\r\n    const getTaskFromUser = (value) => {\r\n           console.log(value); \r\n           props.createTask(value.name, value.descValue, value.checkbo, value.sity, value.phone);\r\n           setActive(false)        \r\n    }\r\n    const closeTaskWingow = () => {\r\n        setActive(false)\r\n        \r\n    }\r\n     return (\r\n        <div>\r\n        {props.users.map(u =>\r\n          <div class=''>\r\n              <TaskList  taskList = {u}  appointAnExecutor={props.appointAnExecutor}/>\r\n         </div>\r\n      )}\r\n      <div className=''>\r\n        {portionNumber > 1 &&\r\n          <button className='' onClick={ () => { setPortionNumber(portionNumber-1) }}></button>}\r\n        {pages.filter(p => p>=leftPortionNumber && p<= rigthPortionNumber).map(el =>{\r\n            return   <span className={props.pageCount === el }\r\n            onClick = {() => {props.getItems(el)}}>{el}</span>\r\n        })}\r\n        {portionCount> portionNumber &&\r\n      <button  className='' onClick = {()=> { setPortionNumber(portionNumber+ 1) }}> </button> }\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}