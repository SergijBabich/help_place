{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import*as axios from'axios';var instance=axios.create({withCredentials:true,baseURL:'https://warm-cove-14456.herokuapp.com/'});//http://localhost:3012/\n//https://warm-cove-14456.herokuapp.com/\nexport var putTask={createNewTask:function createNewTask(name,descValue,checkbo,sity,phone){return instance.post(\"clients\",{name:name,descValue:descValue,checkbo:checkbo,sity:sity,phone:phone}).then(function(response){console.log(response.data);return response.data;});},/* change card execution data*/putTaskForMake:function putTaskForMake(nameExecutor,surnameExecutor,phoneExecutor,executionTime,commentExecutor,id){return instance.put(\"profile/\".concat(id),{nameExecutor:nameExecutor,surnameExecutor:surnameExecutor,phoneExecutor:phoneExecutor,executionTime:executionTime,commentExecutor:commentExecutor}).then(function(response){console.log(response.data);return response.data;});},/* get all  my task list  */getMyListTask:function getMyListTask(JSONStringListId){console.log(JSONStringListId);return instance.get(\"/get-my-list?id=\".concat(JSONStringListId),{JSONStringListId:JSONStringListId}).then(function(response){console.log(response);return response.data;});},/* delene task which was coplited */deleteUserTask:function deleteUserTask(id){return instance.delete(\"/clients/\".concat(id)).then(function(response){return response.data;});}};export var getUserTask={getItems:function getItems(page){console.log(page);return instance.get(\"/clients?pageCount=\".concat(10,\"&page=\",page),{page:page}).then(function(response){return response.data;});}};","map":{"version":3,"sources":["D:/helper/help-app/src/api/api.js"],"names":["React","connect","axios","instance","create","withCredentials","baseURL","putTask","createNewTask","name","descValue","checkbo","sity","phone","post","then","response","console","log","data","putTaskForMake","nameExecutor","surnameExecutor","phoneExecutor","executionTime","commentExecutor","id","put","getMyListTask","JSONStringListId","get","deleteUserTask","delete","getUserTask","getItems","page"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAUC,OAAV,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,eAAe,CAAE,IADS,CAE1BC,OAAO,CAAE,wCAFiB,CAAb,CAAjB,CAKA;AACA;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACnBC,aADmB,wBACLC,IADK,CACCC,SADD,CACYC,OADZ,CACqBC,IADrB,CAC2BC,KAD3B,CACkC,CACjD,MAAOV,CAAAA,QAAQ,CAACW,IAAT,WAAyB,CAC5BL,IAAI,CAAJA,IAD4B,CAE5BC,SAAS,CAATA,SAF4B,CAG5BC,OAAO,CAAPA,OAH4B,CAI5BC,IAAI,CAAJA,IAJ4B,CAK5BC,KAAK,CAALA,KAL4B,CAAzB,EAMJE,IANI,CAMC,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACA,MAAOH,CAAAA,QAAQ,CAACG,IAAhB,CACH,CATM,CAAP,CAUH,CAZkB,CAcnB,+BACAC,cAfmB,yBAeJC,YAfI,CAeUC,eAfV,CAe2BC,aAf3B,CAe0CC,aAf1C,CAeyDC,eAfzD,CAe0EC,EAf1E,CAe8E,CAC7F,MAAOvB,CAAAA,QAAQ,CAACwB,GAAT,mBAAwBD,EAAxB,EAA8B,CACjCL,YAAY,CAAZA,YADiC,CAEjCC,eAAe,CAAfA,eAFiC,CAGjCC,aAAa,CAAbA,aAHiC,CAIjCC,aAAa,CAAbA,aAJiC,CAKjCC,eAAe,CAAfA,eALiC,CAA9B,EAMJV,IANI,CAMC,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EAEA,MAAOH,CAAAA,QAAQ,CAACG,IAAhB,CACH,CAVM,CAAP,CAWH,CA3BkB,CA4BnB,4BACAS,aA7BmB,wBA6BLC,gBA7BK,CA6Ba,CAC5BZ,OAAO,CAACC,GAAR,CAAYW,gBAAZ,EAEA,MAAO1B,CAAAA,QAAQ,CAAC2B,GAAT,2BAAgCD,gBAAhC,EAAqD,CACxDA,gBAAgB,CAAhBA,gBADwD,CAArD,EAEJd,IAFI,CAEC,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAEA,MAAOA,CAAAA,QAAQ,CAACG,IAAhB,CACH,CANM,CAAP,CAQH,CAxCkB,CAyCnB,oCACAY,cA1CmB,yBA0CJL,EA1CI,CA0CA,CACf,MAAOvB,CAAAA,QAAQ,CAAC6B,MAAT,oBAA4BN,EAA5B,GAAkCX,IAAlC,CAAuC,SAAAC,QAAQ,CAAI,CACtD,MAAOA,CAAAA,QAAQ,CAACG,IAAhB,CACH,CAFM,CAAP,CAIH,CA/CkB,CAAhB,CAqDP,MAAO,IAAMc,CAAAA,WAAW,CAAG,CAGvBC,QAHuB,mBAGdC,IAHc,CAGR,CACXlB,OAAO,CAACC,GAAR,CAAYiB,IAAZ,EACA,MAAOhC,CAAAA,QAAQ,CAAC2B,GAAT,8BAAmC,EAAnC,UAA8CK,IAA9C,EAAsD,CACzDA,IAAI,CAAJA,IADyD,CAAtD,EAEJpB,IAFI,CAEC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACG,IAAhB,CACH,CAJM,CAAP,CAKH,CAVsB,CAApB","sourcesContent":["import React from 'react';\r\nimport {  connect} from 'react-redux';\r\nimport * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://warm-cove-14456.herokuapp.com/',\r\n\r\n});\r\n//http://localhost:3012/\r\n//https://warm-cove-14456.herokuapp.com/\r\nexport const putTask = {\r\n    createNewTask(name, descValue, checkbo, sity, phone) {\r\n        return instance.post(`clients`, {\r\n            name,\r\n            descValue,\r\n            checkbo,\r\n            sity,\r\n            phone\r\n        }).then(response => {\r\n            console.log(response.data);      \r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    /* change card execution data*/\r\n    putTaskForMake(nameExecutor, surnameExecutor, phoneExecutor, executionTime, commentExecutor, id) {\r\n        return instance.put(`profile/${id}`, {\r\n            nameExecutor,\r\n            surnameExecutor,\r\n            phoneExecutor,\r\n            executionTime,\r\n            commentExecutor\r\n        }).then(response => {\r\n            console.log(response.data);\r\n            \r\n            return response.data;\r\n        })\r\n    },\r\n    /* get all  my task list  */\r\n    getMyListTask(JSONStringListId) {\r\n        console.log(JSONStringListId);\r\n        \r\n        return instance.get(`/get-my-list?id=${JSONStringListId}` , {\r\n            JSONStringListId    \r\n        }).then(response => {\r\n            console.log(response);\r\n            \r\n            return response.data;\r\n        });\r\n\r\n    },\r\n    /* delene task which was coplited */\r\n    deleteUserTask(id) {\r\n        return instance.delete(`/clients/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport const getUserTask = {\r\n\r\n    \r\n    getItems(page) {\r\n        console.log(page);\r\n        return instance.get(`/clients?pageCount=${10}&page=${page}`, {\r\n            page\r\n        }).then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}