{"ast":null,"code":"var _jsxFileName = \"D:\\\\helper\\\\help-app\\\\src\\\\components\\\\Items\\\\paginator.js\";\nimport React, { useState } from 'react';\nimport t from '../main/main.module.css/main.module.css';\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow';\nimport TaskList from '../main/taskList';\n\nconst Paginator = props => {\n  const [isActive, setActive] = useState(false);\n  let pagesCount = Math.ceil(props.totalUsersCount / props.page);\n  let pages = [];\n  let portionSize = 10;\n\n  for (let i = 0; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rigthPortionNumber = portionNumber * portionSize;\n  let newArr = props.users;\n  console.log(newArr);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.users.reverse().map(u => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TaskList, {\n    taskList: u,\n    appointAnExecutor: props.appointAnExecutor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"\",\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), pages.filter(p => p >= leftPortionNumber && p <= rigthPortionNumber).map(el => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: props.pageCount === el,\n      onClick: () => {\n        props.getItems(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }\n    }, el);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"\",\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" \")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["D:/helper/help-app/src/components/Items/paginator.js"],"names":["React","useState","t","TakeTaskModalWindowRedux","TaskList","Paginator","props","isActive","setActive","pagesCount","Math","ceil","totalUsersCount","page","pages","portionSize","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rigthPortionNumber","newArr","users","console","log","reverse","map","u","appointAnExecutor","filter","p","el","pageCount","getItems"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,yCAAd;AACA,OAAOC,wBAAP,MAAqC,mCAArC;AACA,OAAOC,QAAP,MAAsB,kBAAtB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAY;AAE1B,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIQ,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,eAAN,GAAwBN,KAAK,CAACO,IAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,UAArB,EAAiCO,CAAC,EAAlC,EAAsC;AAClCF,IAAAA,KAAK,CAACG,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGR,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACM,WAArB,CAAnB;AACA,MAAI,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIoB,iBAAiB,GAAG,CAACF,aAAa,GAAE,CAAhB,IAAqBJ,WAArB,GAAkC,CAA1D;AACA,MAAIO,kBAAkB,GAAGH,aAAa,GAAIJ,WAA1C;AACA,MAAIQ,MAAM,GAAGjB,KAAK,CAACkB,KAAnB;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAII,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCjB,KAAK,CAACkB,KAAN,CAAYG,OAAZ,GAAsBC,GAAtB,CAA0BC,CAAC,iBAC1B;AAAK,IAAA,KAAK,EAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAW,IAAA,QAAQ,EAAIA,CAAvB;AAA2B,IAAA,iBAAiB,EAAEvB,KAAK,CAACwB,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADD,CADD,eAMF;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,aAAa,GAAG,CAAhB,iBACC;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAqB,IAAA,OAAO,EAAG,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAmC,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGGL,KAAK,CAACiB,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAEX,iBAAH,IAAwBW,CAAC,IAAGV,kBAA9C,EAAkEM,GAAlE,CAAsEK,EAAE,IAAG;AACxE,wBAAS;AAAM,MAAA,SAAS,EAAE3B,KAAK,CAAC4B,SAAN,KAAoBD,EAArC;AACT,MAAA,OAAO,EAAI,MAAM;AAAC3B,QAAAA,KAAK,CAAC6B,QAAN,CAAeF,EAAf;AAAmB,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC+BA,EAD/B,CAAT;AAEH,GAHA,CAHH,EAOGf,YAAY,GAAEC,aAAd,iBACH;AAAS,IAAA,SAAS,EAAC,EAAnB;AAAsB,IAAA,OAAO,EAAI,MAAK;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AAAoC,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARA,CANE,CADH;AAmBF,CArCH;;AAuCA,eAAed,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport t from '../main/main.module.css/main.module.css'\r\nimport TakeTaskModalWindowRedux from '../takeTaskDo/takeTaskModalWindow'\r\nimport TaskList  from '../main/taskList';\r\nconst Paginator = (props) =>  {\r\n\r\n    const [isActive, setActive] = useState(false);\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.page);\r\n    let pages = [];\r\n    let portionSize = 10;\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber -1) * portionSize +1;\r\n    let rigthPortionNumber = portionNumber  * portionSize;\r\n    let newArr = props.users;\r\n console.log(newArr);\r\n \r\n    \r\n        \r\n     return (\r\n        <div>\r\n        {props.users.reverse().map(u =>\r\n          <div class=''>\r\n              <TaskList  taskList = {u}  appointAnExecutor={props.appointAnExecutor}/>\r\n         </div>\r\n      )}\r\n      <div className=''>\r\n        {portionNumber > 1 &&\r\n          <button className='' onClick={ () => { setPortionNumber(portionNumber-1) }}></button>}\r\n        {pages.filter(p => p>=leftPortionNumber && p<= rigthPortionNumber).map(el =>{\r\n            return   <span className={props.pageCount === el }\r\n            onClick = {() => {props.getItems(el)}}>{el}</span>\r\n        })}\r\n        {portionCount> portionNumber &&\r\n      <button  className='' onClick = {()=> { setPortionNumber(portionNumber+ 1) }}> </button> }\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}