{"ast":null,"code":"var _jsxFileName = \"D:\\\\helper\\\\help-app\\\\src\\\\components\\\\Items\\\\items_container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport itemsReducer from '../../redux/items_reducer.js';\nimport { getItems } from '../../redux/items_reducer.js';\nimport { setCurrentPage } from '../../redux/items_reducer.js';\nimport { setCurrentPageNumber } from '../../redux/items_reducer.js';\nimport Items from './items.js';\nimport { appointAnExecutor } from '../../redux/task_reducer';\nimport taskReducer from '../../redux/task_reducer';\n\nclass ItemsAPIComponent extends React.Component {\n  componentDidMount() {\n    setCurrentPageNumber(this.props.pageCount, this.props.page);\n    this.props.getItems(this.props.pageCount, this.props.page);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Items, {\n      users: this.props.users,\n      page: this.props.page,\n      pageCount: this.props.pageCount,\n      totalUsersCount: this.props.totalUsersCount,\n      getItems: this.props.getItems,\n      appointAnExecutor: this.props.appointAnExecutor,\n      _id: this.props._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.items.users,\n    page: state.items.page,\n    pageCount: state.items.pageCount,\n    totalUsersCount: state.items.totalUsersCount,\n    _id: state.task.myTaskId\n  };\n};\n\nconst ItemsContainer = connect(mapStateToProps, {\n  getItems,\n  appointAnExecutor\n})(ItemsAPIComponent);\nexport default ItemsContainer;","map":{"version":3,"sources":["D:/helper/help-app/src/components/Items/items_container.js"],"names":["React","connect","itemsReducer","getItems","setCurrentPage","setCurrentPageNumber","Items","appointAnExecutor","taskReducer","ItemsAPIComponent","Component","componentDidMount","props","pageCount","page","render","users","totalUsersCount","_id","mapStateToProps","state","items","task","myTaskId","ItemsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,8BAAvB;AACA,SAAQC,cAAR,QAA6B,8BAA7B;AACA,SAAQC,oBAAR,QAAoC,8BAApC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AACA,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAAiD;AAE/CC,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,oBAAoB,CAAC,KAAKO,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,IAAlC,CAApB;AACD,SAAKF,KAAL,CAAWT,QAAX,CAAoB,KAAKS,KAAL,CAAWC,SAA/B,EAA0C,KAAKD,KAAL,CAAWE,IAArD;AACF;;AACDC,EAAAA,MAAM,GAAG;AAET,wBACI,uDACA,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAAzB;AACO,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWE,IADxB;AAEO,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAF7B;AAGO,MAAA,eAAe,EAAE,KAAKD,KAAL,CAAWK,eAHnC;AAIO,MAAA,QAAQ,EAAI,KAAKL,KAAL,CAAWT,QAJ9B;AAKO,MAAA,iBAAiB,EAAE,KAAKS,KAAL,CAAWL,iBALrC;AAMO,MAAA,GAAG,EAAI,KAAKK,KAAL,CAAWM,GANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAYD;;AApBgD;;AAuBjD,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAE/B,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,KAAN,CAAYL,KADd;AAELF,IAAAA,IAAI,EAACM,KAAK,CAACC,KAAN,CAAYP,IAFZ;AAGLD,IAAAA,SAAS,EAAEO,KAAK,CAACC,KAAN,CAAYR,SAHlB;AAILI,IAAAA,eAAe,EAACG,KAAK,CAACC,KAAN,CAAYJ,eAJvB;AAKLC,IAAAA,GAAG,EAACE,KAAK,CAACE,IAAN,CAAWC;AALV,GAAP;AAQD,CAVD;;AAYA,MAAMC,cAAc,GAAGvB,OAAO,CAAEkB,eAAF,EAAmB;AAAChB,EAAAA,QAAD;AAAWI,EAAAA;AAAX,CAAnB,CAAP,CAA0DE,iBAA1D,CAAvB;AACA,eAAee,cAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from   'react-redux';\r\nimport itemsReducer from '../../redux/items_reducer.js';\r\nimport {getItems} from '../../redux/items_reducer.js';\r\nimport {setCurrentPage} from '../../redux/items_reducer.js';\r\nimport {setCurrentPageNumber}  from '../../redux/items_reducer.js'; \r\nimport Items from './items.js';\r\nimport { appointAnExecutor} from '../../redux/task_reducer'\r\nimport taskReducer from '../../redux/task_reducer'\r\nclass ItemsAPIComponent extends React.Component  {\r\n\r\n  componentDidMount(){\r\n      setCurrentPageNumber(this.props.pageCount ,this.props.page);\r\n     this.props.getItems(this.props.pageCount ,this.props.page);\r\n  }\r\n  render() {\r\n\r\n  return (\r\n      <>\r\n      <Items users={this.props.users}\r\n             page={this.props.page}\r\n             pageCount={this.props.pageCount}\r\n             totalUsersCount={this.props.totalUsersCount}\r\n             getItems = {this.props.getItems}\r\n             appointAnExecutor={this.props.appointAnExecutor}\r\n             _id = {this.props._id}\r\n                        />\r\n      </>\r\n  )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.items.users,\r\n    page:state.items.page,\r\n    pageCount: state.items.pageCount,\r\n    totalUsersCount:state.items.totalUsersCount,\r\n    _id:state.task.myTaskId\r\n    \r\n  }\r\n}\r\n\r\nconst ItemsContainer = connect (mapStateToProps, {getItems, appointAnExecutor })(ItemsAPIComponent);\r\nexport default ItemsContainer;"]},"metadata":{},"sourceType":"module"}